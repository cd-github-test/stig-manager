name: Comment on the pull request

# read-write repo token
# access to secrets
on:
  workflow_run:
    workflows: ["Test API Generate Coverage, and Upload Newman and Coverage Artifacts"]
    types:
      - completed

jobs:
  upload:
    runs-on: ubuntu-latest
    if: >
      github.event.workflow_run.event == 'pull_request' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/pr.zip', Buffer.from(download.data));
      - run: unzip pr.zip

      - name: 'Comment on PR'
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            var fs = require('fs');
            var issue_number = Number(fs.readFileSync('./NR'));
            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue_number,
              body: 'Everything is OK. Thank you for the PR!'
            });
  SonarCloudAnalysis-API:
    name: SonarCloud Analysis API
    # needs: test_api
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Important to fetch all history for accurate blame information
      - name: Download lcov artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
      - name: Move lcov.info to api/source
        run: mv lcov.info ./api/source/

      - name: Analyze API with SonarCloud
        uses: SonarSource/sonarcloud-github-action@v2.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_API }} # Needed to push to SonarCloud
        with:
          # Additional arguments for the sonarcloud scanner
          projectBaseDir: ./api/source
          args: -Dsonar.projectKey=nuwcdivnpt_stig-manager-api
            -Dsonar.projectName=nuwcdivnpt_stig-manager-api
            -Dsonar.organization=nuwcdivnpt
            -Dsonar.inclusions=**/*.js
            -Dsonar.exclusions=**/node_modules/**,**/coverage-report/**
            -Dsonar.javascript.lcov.reportPaths=./lcov.info            